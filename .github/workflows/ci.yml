name: CI/CD pipeline

on:
  push:
    branches: ["main"]

jobs:
  ci:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: ["18.x"]
      
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'
      
      - name: Installing dependencies
        run: |
            docker compose up --build

      - name: Checking the app to respond
        run: |
          echo "Waiting for app to be ready..."
          for i in {1..10}; do
            if curl -sSf http://localhost:8000 > /dev/null; then
              echo "App is up!"
              exit 0
            fi
            echo "App not ready yet, retrying in 5 seconds..."
            sleep 5
          done
          echo "App failed to start in time"
          docker compose logs
          exit 1

  cd:
    needs: [ci]
    runs-on: ubuntu-latest
    steps:
      - name: Check credentials
        run: |
          echo ${{secrets.RENDER_SERVICE_ID}}
          echo ${{secrets.RENDER_API_KEY}}
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{secrets.RENDER_SERVICE_ID}}
          api-key: ${{secrets.RENDER_API_KEY}}
          wait-for-success: true









# name: Test Code

# on:
#   pull_request:
#     branches: ["main"]
#   push:
#     branches: ["main"]

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node_version: ["18.x"]

#     steps:
#       - uses: actions/checkout@v4

#       - name: Use Node.js ${{ matrix.node_version }}
#         uses: actions/setup-node@v4
#         with:
#           node-version: ${{ matrix.node_version }}
#           cache: 'npm'

#       - name: Docker Compose Version
#         run: | 
#             echo "This is test of github workflows"

      # - name: Start Docker containers
      #   run: docker compose up --build -d

      # - name: Wait for app to be ready
      #   run: |
      #     echo "Waiting for app to be ready..."
      #     for i in {1..10}; do
      #       if curl -sSf http://localhost:8000 > /dev/null; then
      #         echo "App is up!"
      #         exit 0
      #       fi
      #       echo "App not ready yet, retrying in 5 seconds..."
      #       sleep 5
      #     done
      #     echo "App failed to start in time"
      #     docker compose logs
      #     exit 1

      # - name: Run tests
      #   run: npm run test

      # - name: Cleanup Docker containers
      #   if: always()
      #   run: docker compose down
